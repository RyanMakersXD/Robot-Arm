#include <Servo.h>

Servo base;
Servo armone;  
Servo armtwo;  
Servo armthree;  
Servo gripper;  

int joy1x = A1;
int joy1y = A0;
int joy2x = A3;
int joy2y = A2;
int joy1sw = 2;

int swivel = 0;
int arms = 0;
int motor = 0;

int j1x;
int j1y;
int j2x;
int j2y;

int buttonState;             // the current reading from the input pin
int lastButtonState = HIGH;   // the previous reading from the input pin
unsigned long lastDebounceTime = 0;  // the last time the output pin was toggled
unsigned long debounceDelay = 100;    // the debounce time; increase if the output flickers

void setup() {
  base.attach(6);
  armone.attach(9);
  armtwo.attach(8);
  armthree.attach(7);
  gripper.attach(5);

  pinMode(joy1x, INPUT);
  pinMode(joy1y, INPUT);
  pinMode(joy2x, INPUT);
  pinMode(joy2y, INPUT);
  pinMode(joy1sw, INPUT);

  base.write(90);     
  delay(250); 
  armone.write(90); 
  delay(250);
  armtwo.write(90); 
  delay(250);
  armthree.write(90); 
  delay(250);
  gripper.write(90);           
  delay(1000); 

//  Serial.begin(9600);
}

void loop() {
//  val = analogRead(potpin);            // reads the value of the potentiometer (value between 0 and 1023)
//  val = map(val, 0, 1023, 0, 180);     // scale it to use it with the servo (value between 0 and 180)

  joypoll();
  //joyreport();
  joymap();
  changeMotor();
 motorWrite();
}

void joypoll(){
  j1x = analogRead(joy1x);
  j1y = analogRead(joy1y);
  j2x = analogRead(joy2x);
  j2y = analogRead(joy2y);
}

void joyreport(){
  Serial.print("J1X: ");
  Serial.print(j1x);
  Serial.print(" | J1Y: ");
  Serial.print(j1y);
  Serial.print(" | J2X: ");
  Serial.print(j2x);
  Serial.print(" | J2Y: ");
  Serial.println(j2y);
}

void joymap() {
  swivel = map(j1x, 0, 1023, 0, 180);
  arms = map(j2y, 0, 1023, 0, 180);
  Serial.println(arms);
}

void motorWrite() {
base.write(swivel);
 if (motor == 1){
  motor = 2;
 }
 if (motor == 2){
  armone.write(arms);
 }
 if (motor == 3){
  armtwo.write(arms);
 }
 if (motor == 4){
  armthree.write(arms);
 }
 if (motor == 5){
    if (arms > 90){
    arms = 90;
  }
  gripper.write(arms);
 }
}

void changeMotor() {
      // read the state of the switch into a local variable:
  int reading = digitalRead(joy1sw);

  // check to see if you just pressed the button
  // (i.e. the input went from LOW to HIGH), and you've waited long enough
  // since the last press to ignore any noise:

  // If the switch changed, due to noise or pressing:
  if (reading != lastButtonState) {
    // reset the debouncing timer
    lastDebounceTime = millis();
  }

  if ((millis() - lastDebounceTime) > debounceDelay) {
    // whatever the reading is at, it's been there for longer than the debounce
    // delay, so take it as the actual current state:

    // if the button state has changed:
    if (reading != buttonState) {
      buttonState = reading;

      if (buttonState == LOW) {
        motor = motor + 1;
        if (motor > 5) {
          motor = 1;
        }
      }
    }
  }


  // save the reading. Next time through the loop, it'll be the lastButtonState:
  lastButtonState = reading;
 // Serial.println("");
// Serial.print("Motor: ");
//  Serial.println(motor);
//  Serial.println(buttonState);
 // delay(1000);
}
